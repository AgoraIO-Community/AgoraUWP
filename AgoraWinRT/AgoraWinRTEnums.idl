namespace AgoraWinRT
{
	enum CHANNEL_PROFILE_TYPE
	{
		CHANNEL_PROFILE_COMMUNICATION = 0,
		CHANNEL_PROFILE_LIVE_BROADCASTING = 1,
		CHANNEL_PROFILE_GAME = 2,
	};
	enum CLIENT_ROLE_TYPE
	{
		CLIENT_ROLE_BROADCASTER = 1,
		CLIENT_ROLE_AUDIENCE = 2,
	};
	enum CONNECTION_STATE_TYPE
	{
		CONNECTION_STATE_DISCONNECT = 1,
		CONNECTION_STATE_CONNECTING = 2,
		CONNECTION_STATE_CONNECTED = 3,
		CONNECTION_STATE_RECONNECTING = 4,
		CONNECTION_STATE_FAILED = 5,
	};
	enum CONNECTION_CHANGED_REASON_TYPE
	{
		CONNECTION_CHANGED_CONNECTING = 0,
		CONNECTION_CHANGED_JOIN_SUCCESS = 1,
		CONNECTION_CHANGED_INTERRUPTED = 2,
		CONNECTION_CHANGED_BANNED_BY_SERVER = 3,
		CONNECTION_CHANGED_JOIN_FAILED = 4,
		CONNECTION_CHANGED_LEAVE_CHANNEL = 5,
		CONNECTION_CHANGED_INVALID_APP_ID = 6,
		CONNECTION_CHANGED_INVALID_CHANNEL_NAME = 7,
		CONNECTION_CHANGED_INVALID_TOKEN = 8,
		CONNECTION_CHANGED_TOKEN_EXPIRED = 9,
		CONNECTION_CHANGED_REJECTED_BY_SERVER = 10,
		CONNECTION_CHANGED_SETTING_PROXY_SERVER = 11,
		CONNECTION_CHANGED_RENEW_TOKEN = 12,
		CONNECTION_CHANGED_CLIENT_IP_ADDRESS_CHANGED = 13,
		CONNECTION_CHANGED_KEEP_ALIVE_TIMEOUT = 14,
	};
	enum USER_OFFLINE_REASON_TYPE
	{
		USER_OFFLINE_QUIT = 0,
		USER_OFFLINE_DROPPED = 1,
		USER_OFFLINE_BECOME_AUDIENCE = 2,
	};
	enum NETWORK_TYPE
	{
		NETWORK_TYPE_UNKNOWN = -1,
		NETWORK_TYPE_DISCONNECTED = 0,
		NETWORK_TYPE_LAN = 1,
		NETWORK_TYPE_WIFI = 2,
		NETWORK_TYPE_MOBILE_2G = 3,
		NETWORK_TYPE_MOBILE_3G = 4,
		NETWORK_TYPE_MOBILE_4G = 5,
	};
	enum AUDIO_PROFILE_TYPE
	{
		AUDIO_PROFILE_DEFAULT = 0,
		AUDIO_PROFILE_SPEECH_STANDARD = 1,
		AUDIO_PROFILE_MUSIC_STANDARD = 2,
		AUDIO_PROFILE_MUSIC_STANDARD_STEREO = 3,
		AUDIO_PROFILE_MUSIC_HIGH_QUALITY = 4,
		AUDIO_PROFILE_MUSIC_HIGH_QUALITY_STEREO = 5,
		AUDIO_PROFILE_IOT = 6,
		AUDIO_PROFILE_NUM = 7,
	};
	enum AUDIO_SCENARIO_TYPE
	{
		AUDIO_SCENARIO_DEFAULT = 0,
		AUDIO_SCENARIO_CHATROOM_ENTERTAINMENT = 1,
		AUDIO_SCENARIO_EDUCATION = 2,
		AUDIO_SCENARIO_GAME_STREAMING = 3,
		AUDIO_SCENARIO_SHOWROOM = 4,
		AUDIO_SCENARIO_CHATROOM_GAMING = 5,
		AUDIO_SCENARIO_IOT = 6,
		AUDIO_SCENARIO_MEETING = 8,
		AUDIO_SCENARIO_NUM = 9,
	};
	enum FRAME_RATE
	{
		FRAME_RATE_FPS_1 = 1,
		FRAME_RATE_FPS_7 = 7,
		FRAME_RATE_FPS_10 = 10,
		FRAME_RATE_FPS_15 = 15,
		FRAME_RATE_FPS_24 = 24,
		FRAME_RATE_FPS_30 = 30,
		FRAME_RATE_FPS_60 = 60,
	};
	enum ORIENTATION_MODE {
		ORIENTATION_MODE_ADAPTIVE = 0,
		ORIENTATION_MODE_FIXED_LANDSCAPE = 1,
		ORIENTATION_MODE_FIXED_PORTRAIT = 2,
	};
	enum DEGRADATION_PREFERENCE {
		MAINTAIN_QUALITY = 0,
		MAINTAIN_FRAMERATE = 1,
		MAINTAIN_BALANCED = 2,
	};
	enum VIDEO_MIRROR_MODE_TYPE
	{
		VIDEO_MIRROR_MODE_AUTO = 0,
		VIDEO_MIRROR_MODE_ENABLED = 1,
		VIDEO_MIRROR_MODE_DISABLED = 2,
	};
	enum LOCAL_AUDIO_STREAM_STATE
	{
		LOCAL_AUDIO_STREAM_STATE_STOPPED = 0,
		LOCAL_AUDIO_STREAM_STATE_RECORDING = 1,
		LOCAL_AUDIO_STREAM_STATE_ENCODING = 2,
		LOCAL_AUDIO_STREAM_STATE_FAILED = 3
	};
	enum LOCAL_AUDIO_STREAM_ERROR
	{
		LOCAL_AUDIO_STREAM_ERROR_OK = 0,
		LOCAL_AUDIO_STREAM_ERROR_FAILURE = 1,
		LOCAL_AUDIO_STREAM_ERROR_DEVICE_NO_PERMISSION = 2,
		LOCAL_AUDIO_STREAM_ERROR_DEVICE_BUSY = 3,
		LOCAL_AUDIO_STREAM_ERROR_RECORD_FAILURE = 4,
		LOCAL_AUDIO_STREAM_ERROR_ENCODE_FAILURE = 5,
		LOCAL_AUDIO_STREAM_ERROR_NO_RECORDING_DEVICE = 6,
		LOCAL_AUDIO_STREAM_ERROR_NO_PLAYOUT_DEVICE = 7
	};
	enum LOCAL_VIDEO_STREAM_STATE
	{
		LOCAL_VIDEO_STREAM_STATE_STOPPED = 0,
		LOCAL_VIDEO_STREAM_STATE_CAPTURING = 1,
		LOCAL_VIDEO_STREAM_STATE_ENCODING = 2,
		LOCAL_VIDEO_STREAM_STATE_FAILED = 3
	};
	enum LOCAL_VIDEO_STREAM_ERROR {
		LOCAL_VIDEO_STREAM_ERROR_OK = 0,
		LOCAL_VIDEO_STREAM_ERROR_FAILURE = 1,
		LOCAL_VIDEO_STREAM_ERROR_DEVICE_NO_PERMISSION = 2,
		LOCAL_VIDEO_STREAM_ERROR_DEVICE_BUSY = 3,
		LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE = 4,
		LOCAL_VIDEO_STREAM_ERROR_ENCODE_FAILURE = 5,
		LOCAL_VIDEO_STREAM_ERROR_CAPTURE_INBACKGROUND = 6,
		LOCAL_VIDEO_STREAM_ERROR_CAPTURE_MULTIPLE_FOREGROUND_APPS = 7,
		LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_MINIMIZED = 11,
		LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_CLOSED = 12,
	};
	enum STREAM_PUBLISH_STATE {
		PUB_STATE_IDLE = 0,
		PUB_STATE_NO_PUBLISHED = 1,
		PUB_STATE_PUBLISHING = 2,
		PUB_STATE_PUBLISHED = 3
	};
	enum REMOTE_AUDIO_STATE
	{
		REMOTE_AUDIO_STATE_STOPPED = 0,  // Default state, audio is started or remote user disabled/muted audio stream
		REMOTE_AUDIO_STATE_STARTING = 1,  // The first audio frame packet has been received
		REMOTE_AUDIO_STATE_DECODING = 2,  // The first remote audio frame has been decoded or fronzen state ends
		REMOTE_AUDIO_STATE_FROZEN = 3,    // Remote audio is frozen, probably due to network issue
		REMOTE_AUDIO_STATE_FAILED = 4,    // Remote audio play failed
	};
	enum REMOTE_AUDIO_STATE_REASON
	{
		REMOTE_AUDIO_REASON_INTERNAL = 0,
		REMOTE_AUDIO_REASON_NETWORK_CONGESTION = 1,
		REMOTE_AUDIO_REASON_NETWORK_RECOVERY = 2,
		REMOTE_AUDIO_REASON_LOCAL_MUTED = 3,
		REMOTE_AUDIO_REASON_LOCAL_UNMUTED = 4,
		REMOTE_AUDIO_REASON_REMOTE_MUTED = 5,
		REMOTE_AUDIO_REASON_REMOTE_UNMUTED = 6,
		REMOTE_AUDIO_REASON_REMOTE_OFFLINE = 7,
	};
	enum REMOTE_VIDEO_STATE {
		REMOTE_VIDEO_STATE_STOPPED = 0,
		REMOTE_VIDEO_STATE_STARTING = 1,
		REMOTE_VIDEO_STATE_DECODING = 2,
		REMOTE_VIDEO_STATE_FROZEN = 3,
		REMOTE_VIDEO_STATE_FAILED = 4
	};
	enum REMOTE_VIDEO_STATE_REASON {
		REMOTE_VIDEO_STATE_REASON_INTERNAL = 0,
		REMOTE_VIDEO_STATE_REASON_NETWORK_CONGESTION = 1,
		REMOTE_VIDEO_STATE_REASON_NETWORK_RECOVERY = 2,
		REMOTE_VIDEO_STATE_REASON_LOCAL_MUTED = 3,
		REMOTE_VIDEO_STATE_REASON_LOCAL_UNMUTED = 4,
		REMOTE_VIDEO_STATE_REASON_REMOTE_MUTED = 5,
		REMOTE_VIDEO_STATE_REASON_REMOTE_UNMUTED = 6,
		REMOTE_VIDEO_STATE_REASON_REMOTE_OFFLINE = 7,
		REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK = 8,
		REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK_RECOVERY = 9
	};
	enum STREAM_SUBSCRIBE_STATE {
		SUB_STATE_IDLE = 0,
		SUB_STATE_NO_SUBSCRIBED = 1,
		SUB_STATE_SUBSCRIBING = 2,
		SUB_STATE_SUBSCRIBED = 3
	};
	enum QUALITY_TYPE
	{
		QUALITY_UNKNOWN = 0,
		QUALITY_EXCELLENT = 1,
		QUALITY_GOOD = 2,
		QUALITY_POOR = 3,
		QUALITY_BAD = 4,
		QUALITY_VBAD = 5,
		QUALITY_DOWN = 6,
		QUALITY_UNSUPPORTED = 7,
		QUALITY_DETECTING = 8,
	};
	enum QUALITY_ADAPT_INDICATION {
		ADAPT_NONE = 0,
		ADAPT_UP_BANDWIDTH = 1,
		ADAPT_DOWN_BANDWIDTH = 2,
	};
	enum VIDEO_CODEC_TYPE {
		VIDEO_CODEC_VP8 = 1,
		VIDEO_CODEC_H264 = 2,
		VIDEO_CODEC_EVP = 3,
		VIDEO_CODEC_E264 = 4,
	};
	enum REMOTE_VIDEO_STREAM_TYPE
	{
		REMOTE_VIDEO_STREAM_HIGH = 0,
		REMOTE_VIDEO_STREAM_LOW = 1,
	};
	enum LIGHTENING_CONTRAST_LEVEL
	{
		LIGHTENING_CONTRAST_LOW = 0,
		LIGHTENING_CONTRAST_NORMAL,
		LIGHTENING_CONTRAST_HIGH
	};
	enum AUDIO_MIXING_STATE_TYPE {
		AUDIO_MIXING_STATE_PLAYING = 710,
		AUDIO_MIXING_STATE_PAUSED = 711,
		AUDIO_MIXING_STATE_STOPPED = 713,
		AUDIO_MIXING_STATE_FAILED = 714,
	};
	enum AUDIO_MIXING_ERROR_TYPE {
		AUDIO_MIXING_ERROR_CAN_NOT_OPEN = 701,
		AUDIO_MIXING_ERROR_TOO_FREQUENT_CALL = 702,
		AUDIO_MIXING_ERROR_INTERRUPTED_EOF = 703,
		AUDIO_MIXING_ERROR_OK = 0,
	};
	enum VOICE_CHANGER_PRESET {
		VOICE_CHANGER_OFF = 0x00000000, //Turn off the voice changer
		VOICE_CHANGER_OLDMAN = 0x00000001,
		VOICE_CHANGER_BABYBOY = 0x00000002,
		VOICE_CHANGER_BABYGIRL = 0x00000003,
		VOICE_CHANGER_ZHUBAJIE = 0x00000004,
		VOICE_CHANGER_ETHEREAL = 0x00000005,
		VOICE_CHANGER_HULK = 0x00000006,
		VOICE_BEAUTY_VIGOROUS = 0x00100001,//7,
		VOICE_BEAUTY_DEEP = 0x00100002,
		VOICE_BEAUTY_MELLOW = 0x00100003,
		VOICE_BEAUTY_FALSETTO = 0x00100004,
		VOICE_BEAUTY_FULL = 0x00100005,
		VOICE_BEAUTY_CLEAR = 0x00100006,
		VOICE_BEAUTY_RESOUNDING = 0x00100007,
		VOICE_BEAUTY_RINGING = 0x00100008,
		VOICE_BEAUTY_SPACIAL = 0x00100009,
		GENERAL_BEAUTY_VOICE_MALE_MAGNETIC = 0x00200001,
		GENERAL_BEAUTY_VOICE_FEMALE_FRESH = 0x00200002,
		GENERAL_BEAUTY_VOICE_FEMALE_VITALITY = 0x00200003
	};
	enum AUDIO_REVERB_PRESET {
		AUDIO_REVERB_OFF = 0x00000000, // Turn off audio reverb
		AUDIO_REVERB_FX_KTV = 0x00100001,
		AUDIO_REVERB_FX_VOCAL_CONCERT = 0x00100002,
		AUDIO_REVERB_FX_UNCLE = 0x00100003,
		AUDIO_REVERB_FX_SISTER = 0x00100004,
		AUDIO_REVERB_FX_STUDIO = 0x00100005,
		AUDIO_REVERB_FX_POPULAR = 0x00100006,
		AUDIO_REVERB_FX_RNB = 0x00100007,
		AUDIO_REVERB_FX_PHONOGRAPH = 0x00100008,
		AUDIO_REVERB_POPULAR = 0x00000001,
		AUDIO_REVERB_RNB = 0x00000002,
		AUDIO_REVERB_ROCK = 0x00000003,
		AUDIO_REVERB_HIPHOP = 0x00000004,
		AUDIO_REVERB_VOCAL_CONCERT = 0x00000005,
		AUDIO_REVERB_KTV = 0x00000006,
		AUDIO_REVERB_STUDIO = 0x00000007,
		AUDIO_VIRTUAL_STEREO = 0x00200001
	};
	enum AUDIO_EQUALIZATION_BAND_FREQUENCY
	{
		AUDIO_EQUALIZATION_BAND_31 = 0,
		AUDIO_EQUALIZATION_BAND_62 = 1,
		AUDIO_EQUALIZATION_BAND_125 = 2,
		AUDIO_EQUALIZATION_BAND_250 = 3,
		AUDIO_EQUALIZATION_BAND_500 = 4,
		AUDIO_EQUALIZATION_BAND_1K = 5,
		AUDIO_EQUALIZATION_BAND_2K = 6,
		AUDIO_EQUALIZATION_BAND_4K = 7,
		AUDIO_EQUALIZATION_BAND_8K = 8,
		AUDIO_EQUALIZATION_BAND_16K = 9,
	};
	enum AUDIO_REVERB_TYPE
	{
		AUDIO_REVERB_DRY_LEVEL = 0, // (dB, [-20,10]), the level of the dry signal
		AUDIO_REVERB_WET_LEVEL = 1, // (dB, [-20,10]), the level of the early reflection signal (wet signal)
		AUDIO_REVERB_ROOM_SIZE = 2, // ([0,100]), the room size of the reflection
		AUDIO_REVERB_WET_DELAY = 3, // (ms, [0,200]), the length of the initial delay of the wet signal in ms
		AUDIO_REVERB_STRENGTH = 4, // ([0,100]), the strength of the reverberation
	};
	enum VIDEO_CODEC_PROFILE_TYPE
	{
		VIDEO_CODEC_PROFILE_BASELINE = 66,
		VIDEO_CODEC_PROFILE_MAIN = 77,
		VIDEO_CODEC_PROFILE_HIGH = 100,
	};
	enum AUDIO_SAMPLE_RATE_TYPE
	{
		AUDIO_SAMPLE_RATE_32000 = 32000,
		AUDIO_SAMPLE_RATE_44100 = 44100,
		AUDIO_SAMPLE_RATE_48000 = 48000,
	};
	enum AUDIO_CODEC_PROFILE_TYPE
	{
		AUDIO_CODEC_PROFILE_LC_AAC = 0,
		AUDIO_CODEC_PROFILE_HE_AAC = 1,
	};
	enum RTMP_STREAM_PUBLISH_STATE
	{
		RTMP_STREAM_PUBLISH_STATE_IDLE = 0,
		RTMP_STREAM_PUBLISH_STATE_CONNECTING = 1,
		RTMP_STREAM_PUBLISH_STATE_RUNNING = 2,
		RTMP_STREAM_PUBLISH_STATE_RECOVERING = 3,
	};
	enum RTMP_STREAM_PUBLISH_ERROR
	{
		RTMP_STREAM_PUBLISH_ERROR_OK = 0,
		RTMP_STREAM_PUBLISH_ERROR_INVALID_ARGUMENT = 1,
		RTMP_STREAM_PUBLISH_ERROR_ENCRYPTED_STREAM_NOT_ALLOWED = 2,
		RTMP_STREAM_PUBLISH_ERROR_CONNECTION_TIMEOUT = 3,
		RTMP_STREAM_PUBLISH_ERROR_INTERNAL_SERVER_ERROR = 4,
		RTMP_STREAM_PUBLISH_ERROR_RTMP_SERVER_ERROR = 5,
		RTMP_STREAM_PUBLISH_ERROR_TOO_OFTEN = 6,
		RTMP_STREAM_PUBLISH_ERROR_REACH_LIMIT = 7,
		RTMP_STREAM_PUBLISH_ERROR_NOT_AUTHORIZED = 8,
		RTMP_STREAM_PUBLISH_ERROR_STREAM_NOT_FOUND = 9,
		RTMP_STREAM_PUBLISH_ERROR_FORMAT_NOT_SUPPORTED = 10,
		RTMP_STREAM_UNPUBLISH_ERROR_OK = 100,
	};
	enum RTMP_STREAMING_EVENT
	{
		RTMP_STREAMING_EVENT_FAILED_LOAD_IMAGE = 1,
		RTMP_STREAMING_EVENT_URL_ALREADY_IN_USE = 2,
	};
	enum CHANNEL_MEDIA_RELAY_ERROR {
		RELAY_OK = 0,
		RELAY_ERROR_SERVER_ERROR_RESPONSE = 1,
		RELAY_ERROR_SERVER_NO_RESPONSE = 2,
		RELAY_ERROR_NO_RESOURCE_AVAILABLE = 3,
		RELAY_ERROR_FAILED_JOIN_SRC = 4,
		RELAY_ERROR_FAILED_JOIN_DEST = 5,
		RELAY_ERROR_FAILED_PACKET_RECEIVED_FROM_SRC = 6,
		RELAY_ERROR_FAILED_PACKET_SENT_TO_DEST = 7,
		RELAY_ERROR_SERVER_CONNECTION_LOST = 8,
		RELAY_ERROR_INTERNAL_ERROR = 9,
		RELAY_ERROR_SRC_TOKEN_EXPIRED = 10,
		RELAY_ERROR_DEST_TOKEN_EXPIRED = 11,
	};
	enum CHANNEL_MEDIA_RELAY_EVENT {
		RELAY_EVENT_NETWORK_DISCONNECTED = 0,
		RELAY_EVENT_NETWORK_CONNECTED = 1,
		RELAY_EVENT_PACKET_JOINED_SRC_CHANNEL = 2,
		RELAY_EVENT_PACKET_JOINED_DEST_CHANNEL = 3,
		RELAY_EVENT_PACKET_SENT_TO_DEST_CHANNEL = 4,
		RELAY_EVENT_PACKET_RECEIVED_VIDEO_FROM_SRC = 5,
		RELAY_EVENT_PACKET_RECEIVED_AUDIO_FROM_SRC = 6,
		RELAY_EVENT_PACKET_UPDATE_DEST_CHANNEL = 7,
		RELAY_EVENT_PACKET_UPDATE_DEST_CHANNEL_REFUSED = 8,
		RELAY_EVENT_PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE = 9,
		RELAY_EVENT_PACKET_UPDATE_DEST_CHANNEL_IS_NULL = 10,
		RELAY_EVENT_VIDEO_PROFILE_UPDATE = 11,
	};
	enum CHANNEL_MEDIA_RELAY_STATE {
		RELAY_STATE_IDLE = 0,
		RELAY_STATE_CONNECTING = 1,
		RELAY_STATE_RUNNING = 2,
		RELAY_STATE_FAILURE = 3,
	};
	enum STREAM_FALLBACK_OPTIONS
	{
		STREAM_FALLBACK_OPTION_DISABLED = 0,
		STREAM_FALLBACK_OPTION_VIDEO_STREAM_LOW = 1,
		STREAM_FALLBACK_OPTION_AUDIO_ONLY = 2,
	};
	enum PRIORITY_TYPE
	{
		PRIORITY_HIGH = 50,
		PRIORITY_NORMAL = 100,
	};
	enum LASTMILE_PROBE_RESULT_STATE {
		LASTMILE_PROBE_RESULT_COMPLETE = 1,
		LASTMILE_PROBE_RESULT_INCOMPLETE_NO_BWE = 2,
		LASTMILE_PROBE_RESULT_UNAVAILABLE = 3
	};
	enum AUDIO_FRAME_TYPE {
		FRAME_TYPE_PCM16 = 0,  // PCM 16bit little endian
	};
	enum ENCRYPTION_MODE
	{
		AES_128_XTS = 1,
		AES_128_ECB = 2,
		AES_256_XTS = 3,
		SM4_128_ECB = 4,
		AES_128_GCM = 5,
		AES_256_GCM = 6,
		AES_128_GCM2 = 7,
		AES_256_GCM2 = 8,
		MODE_END,
	};
	enum AUDIO_RECORDING_QUALITY_TYPE
	{
		AUDIO_RECORDING_QUALITY_LOW = 0,
		AUDIO_RECORDING_QUALITY_MEDIUM = 1,
		AUDIO_RECORDING_QUALITY_HIGH = 2,
	};
	enum INJECT_STREAM_STATUS
	{
		INJECT_STREAM_STATUS_START_SUCCESS = 0,
		INJECT_STREAM_STATUS_START_ALREADY_EXISTS = 1,
		INJECT_STREAM_STATUS_START_UNAUTHORIZED = 2,
		INJECT_STREAM_STATUS_START_TIMEDOUT = 3,
		INJECT_STREAM_STATUS_START_FAILED = 4,
		INJECT_STREAM_STATUS_STOP_SUCCESS = 5,
		INJECT_STREAM_STATUS_STOP_NOT_FOUND = 6,
		INJECT_STREAM_STATUS_STOP_UNAUTHORIZED = 7,
		INJECT_STREAM_STATUS_STOP_TIMEDOUT = 8,
		INJECT_STREAM_STATUS_STOP_FAILED = 9,
		INJECT_STREAM_STATUS_BROKEN = 10,
	};
	enum CAPTURER_OUTPUT_PREFERENCE
	{
		CAPTURER_OUTPUT_PREFERENCE_AUTO = 0,
		CAPTURER_OUTPUT_PREFERENCE_PERFORMANCE = 1,
		CAPTURER_OUTPUT_PREFERENCE_PREVIEW = 2,
		CAPTURER_OUTPUT_PREFERENCE_MANUAL = 3,
	};
	enum RAW_AUDIO_FRAME_OP_MODE_TYPE
	{
		RAW_AUDIO_FRAME_OP_MODE_READ_ONLY = 0,
		RAW_AUDIO_FRAME_OP_MODE_WRITE_ONLY = 1,
		RAW_AUDIO_FRAME_OP_MODE_READ_WRITE = 2,
	};
	enum VIDEO_FRAME_TYPE {
		FRAME_TYPE_YUV420 = 0,  // YUV 420 format
		FRAME_TYPE_YUV422 = 1,  // YUV 422 format
		FRAME_TYPE_RGBA = 2,    // RGBA format
	};
	enum VIDEO_OBSERVER_POSITION {
		POSITION_POST_CAPTURER = 1 << 0,
		POSITION_PRE_RENDERER = 1 << 1,
		POSITION_PRE_ENCODER = 1 << 2,
	};
	enum RENDER_MODE_TYPE
	{
		RENDER_MODE_HIDDEN = 1,
		RENDER_MODE_FIT = 2,
		RENDER_MODE_ADAPTIVE = 3,
		RENDER_MODE_FILL = 4,
	};
	enum VIDEO_CONTENT_HINT
	{
		CONTENT_HINT_NONE,
		CONTENT_HINT_MOTION,
		CONTENT_HINT_DETAILS
	};
	enum VIDEO_CAPTURE_TYPE {
		VIDEO_CAPTURE_UNKNOWN,
		VIDEO_CAPTURE_CAMERA,
		VIDEO_CAPTURE_SCREEN,
	};
	enum MEDIA_DEVICE_STATE_TYPE
	{
		MEDIA_DEVICE_STATE_IDLE = 0,
		MEDIA_DEVICE_STATE_ACTIVE = 1,
		MEDIA_DEVICE_STATE_DISABLED = 2,
		MEDIA_DEVICE_STATE_NOT_PRESENT = 4,
		MEDIA_DEVICE_STATE_UNPLUGGED = 8,
		MEDIA_DEVICE_STATE_UNRECOMMENDED = 16,
	};
	enum MEDIA_DEVICE_TYPE
	{
		UNKNOWN_AUDIO_DEVICE = -1,
		AUDIO_PLAYOUT_DEVICE = 0,
		AUDIO_RECORDING_DEVICE = 1,
		VIDEO_RENDER_DEVICE = 2,
		VIDEO_CAPTURE_DEVICE = 3,
		AUDIO_APPLICATION_PLAYOUT_DEVICE = 4,
	};
	enum VOICE_BEAUTIFIER_PRESET
	{
		VOICE_BEAUTIFIER_OFF = 0x00000000,
		CHAT_BEAUTIFIER_MAGNETIC = 0x01010100,
		CHAT_BEAUTIFIER_FRESH = 0x01010200,
		CHAT_BEAUTIFIER_VITALITY = 0x01010300,
		SINGING_BEAUTIFIER = 0x01020100,
		TIMBRE_TRANSFORMATION_VIGOROUS = 0x01030100,
		TIMBRE_TRANSFORMATION_DEEP = 0x01030200,
		TIMBRE_TRANSFORMATION_MELLOW = 0x01030300,
		TIMBRE_TRANSFORMATION_FALSETTO = 0x01030400,
		TIMBRE_TRANSFORMATION_FULL = 0x01030500,
		TIMBRE_TRANSFORMATION_CLEAR = 0x01030600,
		TIMBRE_TRANSFORMATION_RESOUNDING = 0x01030700,
		TIMBRE_TRANSFORMATION_RINGING = 0x01030800
	};
	enum AUDIO_EFFECT_PRESET
	{
		AUDIO_EFFECT_OFF = 0x00000000,
		ROOM_ACOUSTICS_KTV = 0x02010100,
		ROOM_ACOUSTICS_VOCAL_CONCERT = 0x02010200,
		ROOM_ACOUSTICS_STUDIO = 0x02010300,
		ROOM_ACOUSTICS_PHONOGRAPH = 0x02010400,
		ROOM_ACOUSTICS_VIRTUAL_STEREO = 0x02010500,
		ROOM_ACOUSTICS_SPACIAL = 0x02010600,
		ROOM_ACOUSTICS_ETHEREAL = 0x02010700,
		ROOM_ACOUSTICS_3D_VOICE = 0x02010800,
		VOICE_CHANGER_EFFECT_UNCLE = 0x02020100,
		VOICE_CHANGER_EFFECT_OLDMAN = 0x02020200,
		VOICE_CHANGER_EFFECT_BOY = 0x02020300,
		VOICE_CHANGER_EFFECT_SISTER = 0x02020400,
		VOICE_CHANGER_EFFECT_GIRL = 0x02020500,
		VOICE_CHANGER_EFFECT_PIGKING = 0x02020600,
		VOICE_CHANGER_EFFECT_HULK = 0x02020700,
		STYLE_TRANSFORMATION_RNB = 0x02030100,
		STYLE_TRANSFORMATION_POPULAR = 0x02030200,
		PITCH_CORRECTION = 0x02040100
	};
	enum AUDIENCE_LATENCY_LEVEL_TYPE
	{
		AUDIENCE_LATENCY_LEVEL_LOW_LATENCY = 1,
		AUDIENCE_LATENCY_LEVEL_ULTRA_LOW_LATENCY = 2,
	};
	enum CLOUD_PROXY_TYPE
	{
		NONE_PROXY = 0,
		UDP_PROXY = 1,
	};
	enum VOICE_CONVERSION_PRESET
	{
		VOICE_CONVERSION_OFF = 0x00000000,
		VOICE_CHANGER_NEUTRAL = 0x03010100,
		VOICE_CHANGER_SWEET = 0x03010200,
		VOICE_CHANGER_SOLID = 0x03010300,
		VOICE_CHANGER_BASS = 0x03010400
	};
	enum CAPTURE_BRIGHTNESS_LEVEL_TYPE 
	{
		CAPTURE_BRIGHTNESS_LEVEL_INVALID = -1,
		CAPTURE_BRIGHTNESS_LEVEL_NORMAL = 0,
		CAPTURE_BRIGHTNESS_LEVEL_BRIGHT = 1,
		CAPTURE_BRIGHTNESS_LEVEL_DARK = 2,
	};
	enum LOG_LEVEL
	{
		LOG_LEVEL_NONE = 0x0000,
		LOG_LEVEL_INFO = 0x0001,
		LOG_LEVEL_WARN = 0x0002,
		LOG_LEVEL_ERROR = 0x0004,
		LOG_LEVEL_FATAL = 0x0008,
	};
	enum AREA_CODE {
		AREA_CODE_CN = 0x00000001,
		AREA_CODE_NA = 0x00000002,
		AREA_CODE_EU = 0x00000004,
		AREA_CODE_AS = 0x00000008,
		AREA_CODE_JP = 0x00000010,
		AREA_CODE_IN = 0x00000020,
		AREA_CODE_GLOB = 0xFFFFFFFF
	};
	enum AUDIO_MIXING_REASON_TYPE {
		/** 701: The SDK cannot open the audio mixing file.
		*/
		AUDIO_MIXING_REASON_CAN_NOT_OPEN = 701,
		/** 702: The SDK opens the audio mixing file too frequently.
		*/
		AUDIO_MIXING_REASON_TOO_FREQUENT_CALL = 702,
		/** 703: The audio mixing file playback is interrupted.
		*/
		AUDIO_MIXING_REASON_INTERRUPTED_EOF = 703,
		/** 720: The audio mixing is started by user.
		*/
		AUDIO_MIXING_REASON_STARTED_BY_USER = 720,
		/** 721: The audio mixing file is played once.
		*/
		AUDIO_MIXING_REASON_ONE_LOOP_COMPLETED = 721,
		/** 722: The audio mixing file is playing in a new loop.
		*/
		AUDIO_MIXING_REASON_START_NEW_LOOP = 722,
		/** 723: The audio mixing file is all played out.
		*/
		AUDIO_MIXING_REASON_ALL_LOOPS_COMPLETED = 723,
		/** 724: Playing of audio file is stopped by user.
		*/
		AUDIO_MIXING_REASON_STOPPED_BY_USER = 724,
		/** 725: Playing of audio file is paused by user.
		*/
		AUDIO_MIXING_REASON_PAUSED_BY_USER = 725,
		/** 726: Playing of audio file is resumed by user.
		*/
		AUDIO_MIXING_REASON_RESUMED_BY_USER = 726,
	};
	enum AUDIO_RECORDING_POSITION {
		/** The SDK will record the voices of all users in the channel. */
		AUDIO_RECORDING_POSITION_MIXED_RECORDING_AND_PLAYBACK = 0,
		/** The SDK will record the voice of the local user. */
		AUDIO_RECORDING_POSITION_RECORDING = 1,
		/** The SDK will record the voices of remote users. */
		AUDIO_RECORDING_POSITION_MIXED_PLAYBACK = 2,
	};
}